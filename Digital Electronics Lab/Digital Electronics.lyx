#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\begin_preamble
\date{}
\usepackage{circuitikz}
\usepackage{fancyhdr}
\usepackage{tikz}
\usetikzlibrary{circuits.logic.US,circuits.logic.IEC}
\fancyhead{}
\renewcommand{\headrulewidth}{0pt}
\pagestyle{fancy}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman newcent
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 10page%
\topmargin 10page%
\rightmargin 10page%
\bottommargin 10page%
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
chaptername}{Experiment}
\end_layout

\end_inset


\end_layout

\begin_layout Title
EC 4102 : Digital Electronics Lab
\end_layout

\begin_layout Author
Ashish Gaurav
\end_layout

\begin_layout Section
Compulsory Experiments
\end_layout

\begin_layout Enumerate
design and realization of a parity bit checker using IC 7486 
\end_layout

\begin_layout Enumerate
design and realization of a 4:2 line encoder using IC 7432 
\end_layout

\begin_layout Enumerate
design and realization of a 4-bit magnitude comparator using IC 7485 
\end_layout

\begin_layout Enumerate
assembling of a seven segment decoder using IC 7447 and IC 7404 
\end_layout

\begin_layout Enumerate
design and testing of SR and JK Flip-flop using IC 7400 and IC 7402 
\end_layout

\begin_layout Enumerate
design of a 2 bit binary parallel adder using IC CD 4030 and IC CD 4081
 
\end_layout

\begin_layout Enumerate
design of an astable multivibrator (using IC 555 timer) and to observe the
 output waveforms
\end_layout

\begin_layout Enumerate
design of an monostable multivibrator (using IC 555 timer) and to observe
 the output waveforms 
\end_layout

\begin_layout Enumerate
design and testing of a 2 : 1 multiplexer and CMOS switch using IC CD 4066
 
\end_layout

\begin_layout Enumerate
design of a 4 bit serial in serial out shift register using IC CD 4027 and
 555 timer 
\end_layout

\begin_layout Enumerate
design of a modulo-9 ripple counter using IC CD 4029 and IC CD 4091
\end_layout

\begin_layout Enumerate
design of a Schmitt trigger circuit (using IC 741 OPAMP) and to observe
 the output waveforms
\end_layout

\begin_layout Section
Optional Experiments
\end_layout

\begin_layout Enumerate
design and realization of 
\end_layout

\begin_deeper
\begin_layout Enumerate
a binary to gray code converter using IC 7486
\end_layout

\begin_layout Enumerate
a gray to binary code converter using IC 7486 
\end_layout

\end_deeper
\begin_layout Enumerate
design of an EX-OR gate using a minimum of 2 input NAND gates (IC 7400)
 
\end_layout

\begin_layout Enumerate
design and realization of an odd parity generator using IC 7486
\end_layout

\begin_layout Enumerate
design of a 1-bit half subtractor using IC CD 4066
\end_layout

\begin_layout Enumerate
design and realization of a 4:16 decoder using 1:4 de-multiplexer
\end_layout

\begin_layout Enumerate
design of a modulo-256 ripple counter using IC 7493 
\end_layout

\begin_layout Enumerate
design of a 4 : 16 line decoder using IC CD 4514
\end_layout

\begin_layout Enumerate
to read 8 specified address location of a programmed IC Intel 2716 
\end_layout

\begin_layout Enumerate
to store a nibble in an IC 2114 RAM and to read it 
\end_layout

\begin_layout Chapter
Parity Bit Checker
\end_layout

\begin_layout Section*
Aim
\end_layout

\begin_layout Standard
design and realization of a parity bit checker using IC 7486
\end_layout

\begin_layout Section*
Apparatus Needed
\end_layout

\begin_layout Standard
breadboard, DC power supply, IC 7486 (1), connecting wires
\end_layout

\begin_layout Section*
Circuit Diagram
\end_layout

\begin_layout Standard
\paragraph_spacing single
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{circuitikz}[scale=1]
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
s{1}
\end_layout

\begin_layout Plain Layout


\backslash
def
\backslash
xorwidth{0.28} 
\end_layout

\begin_layout Plain Layout


\backslash
draw 
\end_layout

\begin_layout Plain Layout

(0,0) node[xor port][scale=
\backslash
s] (xor1){} 
\end_layout

\begin_layout Plain Layout

(0,4*
\backslash
s) node[xor port][scale=
\backslash
s] (xor2){} 
\end_layout

\begin_layout Plain Layout

(2*
\backslash
s,2*
\backslash
s) node[xor port][scale=
\backslash
s] (xor3){} 
\end_layout

\begin_layout Plain Layout

(5*
\backslash
s,2*
\backslash
s-
\backslash
s*
\backslash
xorwidth) node[xor port][scale=
\backslash
s] (xor4){} 
\end_layout

\begin_layout Plain Layout

(xor1.out) -| (xor3.in 2) 
\end_layout

\begin_layout Plain Layout

(xor2.out) -| (xor3.in 1) 
\end_layout

\begin_layout Plain Layout

(xor3.out) --(3*
\backslash
s,2*
\backslash
s) -| (xor4.in 1); 
\end_layout

\begin_layout Plain Layout


\backslash
node[left=1*
\backslash
s] at (xor1.in 1) {5}; 
\end_layout

\begin_layout Plain Layout


\backslash
node[left=1*
\backslash
s] at (xor1.in 2) {4}; 
\end_layout

\begin_layout Plain Layout


\backslash
node[yshift=7*
\backslash
s] at (xor1.out) {6};
\end_layout

\begin_layout Plain Layout


\backslash
node[left=1*
\backslash
s] at (xor2.in 1) {1}; 
\end_layout

\begin_layout Plain Layout


\backslash
node[left=1*
\backslash
s] at (xor2.in 2) {2}; 
\end_layout

\begin_layout Plain Layout


\backslash
node[yshift=7*
\backslash
s] at (xor2.out) {3};
\end_layout

\begin_layout Plain Layout


\backslash
node[left=1*
\backslash
s] at (xor3.in 1) {9}; 
\end_layout

\begin_layout Plain Layout


\backslash
node[left=1*
\backslash
s] at (xor3.in 2) {10}; 
\end_layout

\begin_layout Plain Layout


\backslash
node[yshift=7*
\backslash
s] at (xor3.out) {8};
\end_layout

\begin_layout Plain Layout


\backslash
node[left=1*
\backslash
s,yshift=7*
\backslash
s] at (xor4.in 1) {12}; 
\end_layout

\begin_layout Plain Layout


\backslash
node[left=1*
\backslash
s,yshift=-7*
\backslash
s] at (xor4.in 2) {13}; 
\end_layout

\begin_layout Plain Layout


\backslash
node[yshift=7*
\backslash
s] at (xor4.out) {11};
\end_layout

\begin_layout Plain Layout


\backslash
draw 
\end_layout

\begin_layout Plain Layout

(xor4.in 2) -- (3*
\backslash
s, 2*
\backslash
s-2*
\backslash
s*
\backslash
xorwidth) -- (3*
\backslash
s,0) (xor4.out) -- (7*
\backslash
s, 2*
\backslash
s-
\backslash
xorwidth*
\backslash
s); 
\end_layout

\begin_layout Plain Layout


\backslash
node[yshift=-7*
\backslash
s] at (3*
\backslash
s,0) {$P_1$}; 
\end_layout

\begin_layout Plain Layout


\backslash
node[right=1*
\backslash
s] at (7*
\backslash
s, 2*
\backslash
s-
\backslash
xorwidth*
\backslash
s) {o/p}; 
\end_layout

\begin_layout Plain Layout


\backslash
end{circuitikz}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Theory
\end_layout

\begin_layout Standard
The XOR gate (sometimes written ExOR) is a gate which can have multiple
 inputs.
 The peculiarity is in its output.
 The output is high if the number of high inputs is odd.
 IC 7486 has four TTL logic XOR gates as shown in the figure below.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/7486_Quad_2-input_ExOR_Gates.PNG
	lyxscale 30
	width 30page%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
source : 
\begin_inset CommandInset href
LatexCommand href
name "IC 7486"
target "http://commons.wikimedia.org/wiki/File:7486_Quad_2-input_ExOR_Gates.PNG"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
What is a parity bit?
\end_layout

\begin_layout Standard
Parity refers to a the number of 
\begin_inset Formula $1$
\end_inset

's in some binary data as being odd or even.
 So, 
\begin_inset Formula $11100$
\end_inset

 has odd parity, whereas, 
\begin_inset Formula $1001$
\end_inset

 has even parity.
\end_layout

\begin_layout Standard
Parity bit is an idea to detect errors during the transmission of binary
 data.
 When we transmit some binary data, it contains a specific number of 
\begin_inset Formula $1$
\end_inset

's and 
\begin_inset Formula $0$
\end_inset

's.
 We intentionally add an extra bit to the information, so that the number
 of 
\begin_inset Formula $1$
\end_inset

's becomes either odd or even.
 Let us denote the fact that original data had an even number of 
\begin_inset Formula $1$
\end_inset

's by 
\begin_inset Formula $P_{1}$
\end_inset

.
 So,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
P_{1}= & \begin{cases}
1 & \mbox{if there are even number of \ensuremath{1}'s in the original data}\\
0 & \mbox{otherwise}
\end{cases}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
After transmitting the data, we tell the reciever the parity of sent data
 (somehow), and then he checks whether the received data has the same parity
 as the sent data.
 If not, then there must be some error introduced in the medium of transmission.
\end_layout

\begin_layout Standard
The circuit that generates the extra parity bit given the initial data,
 is called as 
\series bold
parity bit generator.

\series default
 And, the circuit that checks the parity of the received data is called
 as a 
\series bold
parity bit checker
\series default
.
\end_layout

\begin_layout Subsection*
I added the parity bit, how does the circuit check for it?
\end_layout

\begin_layout Standard
Let's examine the circuit.
 Suppose we sent the data (including the parity bit), as having an odd parity.
\end_layout

\begin_layout Section*
Procedure
\end_layout

\begin_layout Enumerate
Connect the circuit as shown in the circuit diagram.
\end_layout

\begin_layout Enumerate
Before switching on power supply, make sure that the connections are correct.
\end_layout

\begin_layout Enumerate
Apply the input logic as per the truth table in terms of 
\begin_inset Formula $+5$
\end_inset

V for state 
\begin_inset Formula $1$
\end_inset

 and 
\begin_inset Formula $0$
\end_inset

V for state 
\begin_inset Formula $0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Observe the output states.
\end_layout

\begin_layout Enumerate
Verify the results of truthness.
\end_layout

\begin_layout Enumerate
Repeat steps 
\begin_inset Formula $3-5$
\end_inset

 for all input combinations.
\end_layout

\begin_layout Section*
Precautions
\end_layout

\begin_layout Enumerate
Power supply should not exceed 
\begin_inset Formula $+5$
\end_inset

V.
\end_layout

\begin_layout Enumerate
Connections should be tight.
\end_layout

\begin_layout Enumerate
Components should be individually tested, beforehand.
\end_layout

\begin_layout Chapter
4:2 Line Encoder Circuit
\end_layout

\begin_layout Section*
Aim
\end_layout

\begin_layout Standard
design and realization of a 4:2 line encoder using IC 7432
\end_layout

\begin_layout Section*
Apparatus Needed
\end_layout

\begin_layout Standard
breadboard, DC power supply, IC 7432 (1), connecting wires
\end_layout

\begin_layout Section*
Circuit Diagram
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{circuitikz}  
\backslash
def
\backslash
orwidth{0.28} 
\backslash
draw (4,2) node[or port] (or1){} (4,4) node[or port] (or2){} (0,0) -- (1,0)
 -- (1,4-
\backslash
orwidth) -- (or2.in 2) (or1.in 2) -| (1,2-
\backslash
orwidth) node[circ] {} (or1.in 1) -- (0,2+
\backslash
orwidth) (or1.out) -- (6,2) (or2.out) -- (6,4) (or2.in 1) -- (0,4+
\backslash
orwidth) (0,6+
\backslash
orwidth) -- (6,6+
\backslash
orwidth) ; 
\backslash
node[left=1] at (0,6+
\backslash
orwidth) {$D_0$}; 
\backslash
node[left=1] at (0,4+
\backslash
orwidth) {$D_1$}; 
\backslash
node[left=1] at (0,2+
\backslash
orwidth) {$D_2$}; 
\backslash
node[left=1] at (0,0) {$D_3$}; 
\backslash
node[right=1] at (6,6+
\backslash
orwidth) {not used}; 
\backslash
node[right=1] at (6,4) {$Y=D_1+D_3$}; 
\backslash
node[right=1] at (6,2) {$X=D_2+D_3$}; 
\backslash
node[yshift=8] at (or2.in 1) {1}; 
\backslash
node[yshift=-8] at (or2.in 2) {2}; 
\backslash
node[yshift=8] at (or2.out) {3}; 
\backslash
node[yshift=8] at (or1.in 1) {4}; 
\backslash
node[yshift=-8] at (or1.in 2) {5}; 
\backslash
node[yshift=8] at (or1.out) {6};
\end_layout

\begin_layout Plain Layout


\backslash
end{circuitikz}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Procedure
\end_layout

\begin_layout Enumerate
Connect the circuit as shown in the circuit diagram.
\end_layout

\begin_layout Enumerate
Before switching on power supply, make sure that the connections are correct.
\end_layout

\begin_layout Enumerate
Apply the input logic as per the truth table in terms of 
\begin_inset Formula $+5$
\end_inset

V for state 
\begin_inset Formula $1$
\end_inset

 and 
\begin_inset Formula $0$
\end_inset

V for state 
\begin_inset Formula $0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Observe the output states.
\end_layout

\begin_layout Enumerate
Verify the results of truthness.
\end_layout

\begin_layout Enumerate
Repeat steps 
\begin_inset Formula $3-5$
\end_inset

 for all input combinations.
\end_layout

\begin_layout Section*
Precautions
\end_layout

\begin_layout Enumerate
Power supply should not exceed 
\begin_inset Formula $+5$
\end_inset

V.
\end_layout

\begin_layout Enumerate
Connections should be tight.
\end_layout

\begin_layout Enumerate
Components should be individually tested, beforehand.
\end_layout

\begin_layout Chapter
Magnitude Comparator Circuit
\end_layout

\begin_layout Section*
Aim
\end_layout

\begin_layout Standard
design and realization of a 4-bit magnitude comparator using IC 7485
\end_layout

\begin_layout Section*
Apparatus Needed
\end_layout

\begin_layout Standard
breadboard, DC power supply, IC 7485 (1), connecting wires
\end_layout

\begin_layout Section*
Procedure
\end_layout

\begin_layout Enumerate
Connect the circuit as shown in the circuit diagram.
\end_layout

\begin_layout Enumerate
Before switching on power supply, make sure that the connections are correct.
\end_layout

\begin_layout Enumerate
Apply the input logic as per the truth table in terms of 
\begin_inset Formula $+5$
\end_inset

V for state 
\begin_inset Formula $1$
\end_inset

 and 
\begin_inset Formula $0$
\end_inset

V for state 
\begin_inset Formula $0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Observe the output states.
\end_layout

\begin_layout Enumerate
Verify the results of truthness.
\end_layout

\begin_layout Enumerate
Repeat steps 
\begin_inset Formula $3-5$
\end_inset

 for all input combinations.
\end_layout

\begin_layout Section*
Precautions
\end_layout

\begin_layout Enumerate
Power supply should not exceed 
\begin_inset Formula $+5$
\end_inset

V.
\end_layout

\begin_layout Enumerate
Connections should be tight.
\end_layout

\begin_layout Enumerate
Components should be individually tested, beforehand.
\end_layout

\begin_layout Chapter
Seven Segment Decoder
\end_layout

\begin_layout Section*
Aim
\end_layout

\begin_layout Standard
assembling of a seven segment decoder using IC 7447 and IC 7404
\end_layout

\begin_layout Section*
Apparatus Needed
\end_layout

\begin_layout Standard
breadboard, DC power supply, IC 7447 (1), IC 7404 (1), connecting wires,
 seven segment display IC LT 543 (1)
\end_layout

\begin_layout Section*
Procedure
\end_layout

\begin_layout Enumerate
Connect the circuit as shown in the circuit diagram.
\end_layout

\begin_layout Enumerate
Before switching on power supply, make sure that the connections are correct.
\end_layout

\begin_layout Enumerate
Apply the input logic as per the truth table in terms of 
\begin_inset Formula $+5$
\end_inset

V for state 
\begin_inset Formula $1$
\end_inset

 and 
\begin_inset Formula $0$
\end_inset

V for state 
\begin_inset Formula $0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Observe the output states.
\end_layout

\begin_layout Enumerate
Verify the displayed digit with decimal equivalent of applied input binary
 code.
\end_layout

\begin_layout Enumerate
Repeat steps 
\begin_inset Formula $3-5$
\end_inset

 for all input combinations.
\end_layout

\begin_layout Section*
Precautions
\end_layout

\begin_layout Enumerate
Power supply should not exceed 
\begin_inset Formula $+5$
\end_inset

V.
\end_layout

\begin_layout Enumerate
Connections should be tight.
\end_layout

\begin_layout Enumerate
Components should be individually tested, beforehand.
\end_layout

\begin_layout Chapter
SR and JK flip flops
\end_layout

\begin_layout Section*
Aim
\end_layout

\begin_layout Standard
design and testing of SR and JK Flip-flop using IC 7400 and IC 7402
\end_layout

\begin_layout Section*
Apparatus Needed
\end_layout

\begin_layout Standard
breadboard, DC power supply, IC 7400 (1), IC 7402 (1), connecting wires
\end_layout

\begin_layout Section*
Procedure
\end_layout

\begin_layout Enumerate
Connect the circuit as shown in the circuit diagram.
\end_layout

\begin_layout Enumerate
Before switching on power supply, make sure that the connections are correct.
\end_layout

\begin_layout Enumerate
Apply the input logic as per the truth table in terms of 
\begin_inset Formula $+5$
\end_inset

V for state 
\begin_inset Formula $1$
\end_inset

 and 
\begin_inset Formula $0$
\end_inset

V for state 
\begin_inset Formula $0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Observe the output states.
\end_layout

\begin_layout Enumerate
Verify the displayed digit with decimal equivalent of applied input binary
 code.
\end_layout

\begin_layout Enumerate
Repeat steps 
\begin_inset Formula $3-5$
\end_inset

 for all input combinations.
\end_layout

\begin_layout Section*
Precautions
\end_layout

\begin_layout Enumerate
Power supply should not exceed 
\begin_inset Formula $+5$
\end_inset

V.
\end_layout

\begin_layout Enumerate
Connections should be tight.
\end_layout

\begin_layout Enumerate
Components should be individually tested, beforehand.
\end_layout

\begin_layout Chapter
Binary Adder Circuit
\end_layout

\begin_layout Section*
Aim
\end_layout

\begin_layout Standard
design of a 2 bit binary parallel adder using IC CD 4030 and IC CD 4081
\end_layout

\begin_layout Section*
Apparatus Needed
\end_layout

\begin_layout Standard
breadboard, IC CD 4030 (1), IC CD 4081 (1), connecting wires
\end_layout

\begin_layout Section*
Procedure
\end_layout

\begin_layout Enumerate
Connect the circuit as shown in the figure.
\end_layout

\begin_layout Enumerate
For all input combinations, switch on the circuit and note the observations.
\end_layout

\begin_layout Section*
Precautions
\end_layout

\begin_layout Enumerate
Power supply should not exceed 
\begin_inset Formula $+5$
\end_inset

V.
\end_layout

\begin_layout Enumerate
Connections should be tight.
\end_layout

\begin_layout Enumerate
Components should be individually tested, beforehand.
\end_layout

\begin_layout Chapter
Astable Multivibrator
\end_layout

\begin_layout Section*
Aim
\end_layout

\begin_layout Standard
design of an astable multivibrator (using IC 555 timer) and to observe the
 output waveforms
\end_layout

\begin_layout Section*
Apparatus Needed
\end_layout

\begin_layout Standard
breadboard, DC power supply, cathode ray oscilloscope (CRO), IC 555 timer
 (1), capacitors 
\begin_inset Formula $0.1\mu$
\end_inset

F (1), capacitors 
\begin_inset Formula $0.01\mu$
\end_inset

F (1), resistances 
\begin_inset Formula $33k\Omega$
\end_inset

 (1), rheostat (1) (range in 
\begin_inset Formula $k\Omega$
\end_inset

), connecting wires
\end_layout

\begin_layout Section*
Procedure
\end_layout

\begin_layout Enumerate
Connect the circuit as shown in the circuit diagram.
\end_layout

\begin_layout Enumerate
Before switching on the power supply, make sure the connections are correct.
\end_layout

\begin_layout Enumerate
Connect the CRO probe to terminal 
\begin_inset Formula $3$
\end_inset

, other probe to ground.
\end_layout

\begin_layout Enumerate
Observe output waveforms for different values of 
\begin_inset Formula $R_{B}$
\end_inset

 by varying the rheostat.
\end_layout

\begin_layout Enumerate
Tabulate 
\begin_inset Formula $W$
\end_inset

, 
\begin_inset Formula $T$
\end_inset

 in the observation table.
\end_layout

\begin_layout Enumerate
Calculate 
\begin_inset Formula $D_{m}$
\end_inset

, 
\begin_inset Formula $D_{t}$
\end_inset

 and error (
\begin_inset Formula $\%$
\end_inset

).
\end_layout

\begin_layout Enumerate
Plot the waveforms observed at terminals 
\begin_inset Formula $2$
\end_inset

 and 
\begin_inset Formula $3$
\end_inset

.
\end_layout

\begin_layout Section*
Precautions
\end_layout

\begin_layout Enumerate
Power supply should not exceed 
\begin_inset Formula $+5$
\end_inset

V.
\end_layout

\begin_layout Enumerate
Connections should be tight.
\end_layout

\begin_layout Enumerate
Components should be individually tested, beforehand.
\end_layout

\begin_layout Chapter
Monostable Multivibrator
\end_layout

\begin_layout Section*
Aim
\end_layout

\begin_layout Standard
design of an monostable multivibrator (using IC 555 timer) and to observe
 the output waveforms
\end_layout

\begin_layout Section*
Apparatus Needed
\end_layout

\begin_layout Standard
breadboard, DC power supply, function generator or pulse generator (1),
 cathode ray oscilloscope (1), IC 555 timer (1), capacitors 
\begin_inset Formula $0.1\mu$
\end_inset

F (1), capacitors 
\begin_inset Formula $0.01\mu$
\end_inset

F (1), rheostat (1) (range in 
\begin_inset Formula $k\Omega$
\end_inset

), connecting wires
\end_layout

\begin_layout Section*
Procedure
\end_layout

\begin_layout Enumerate
Connect the circuit as shown in the circuit diagram.
\end_layout

\begin_layout Enumerate
Before switching on the power supply, make sure the connections are correct.
\end_layout

\begin_layout Enumerate
Connect the CRO probe to terminal 
\begin_inset Formula $3$
\end_inset

, other terminal to ground.
\end_layout

\begin_layout Enumerate
Observe the output waveform by varying 
\begin_inset Formula $R$
\end_inset

.
\end_layout

\begin_layout Enumerate
Tabulate pulse width as 
\begin_inset Formula $W_{0}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Calculate 
\begin_inset Formula $W_{t}$
\end_inset

 and error (
\begin_inset Formula $\%$
\end_inset

).
\end_layout

\begin_layout Enumerate
Plot the waveform observed at terminals 
\begin_inset Formula $3$
\end_inset

 and 
\begin_inset Formula $6$
\end_inset

.
\end_layout

\begin_layout Section*
Precautions
\end_layout

\begin_layout Enumerate
Power supply should not exceed 
\begin_inset Formula $+5$
\end_inset

V.
\end_layout

\begin_layout Enumerate
Connections should be tight.
\end_layout

\begin_layout Enumerate
Components should be individually tested, beforehand.
\end_layout

\begin_layout Chapter
CMOS Logic
\end_layout

\begin_layout Section*
Aim
\end_layout

\begin_layout Standard
design and testing of a 2 : 1 multiplexer and CMOS switch using IC CD 4066
\end_layout

\begin_layout Section*
Apparatus Needed
\end_layout

\begin_layout Standard
breadboard, DC power supply, IC CD 4027 (1), IC CD 4066 (1), connecting
 wires
\end_layout

\begin_layout Section*
Procedure
\end_layout

\begin_layout Enumerate
Connect the circuit as shown in the circuit diagram.
\end_layout

\begin_layout Enumerate
Before switching on the power supply, make sure all connections are correct.
\end_layout

\begin_layout Enumerate
Observe 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $C$
\end_inset

 and 
\begin_inset Formula $F$
\end_inset

 for the switch and complete the observation table.
\end_layout

\begin_layout Enumerate
Observe 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $B$
\end_inset

, 
\begin_inset Formula $C$
\end_inset

 and 
\begin_inset Formula $F$
\end_inset

 for the multiplexer and complete the observation table.
\end_layout

\begin_layout Section*
Precautions
\end_layout

\begin_layout Enumerate
Power supply should not exceed 
\begin_inset Formula $+12$
\end_inset

V.
\end_layout

\begin_layout Enumerate
Connections should be tight.
\end_layout

\begin_layout Enumerate
Components should be individually tested, beforehand.
\end_layout

\begin_layout Chapter
Serial In Serial Out Shift Register
\end_layout

\begin_layout Section*
Aim
\end_layout

\begin_layout Standard
design of a 4 bit serial in serial out shift register using IC CD 4027 and
 555 timer
\end_layout

\begin_layout Section*
Apparatus Needed
\end_layout

\begin_layout Standard
breadboard, DCdesign of a modulo-9 ripple counter using IC CD 4029 and IC
 CD 4091 power supply, IC CD 4027 (4), IC 555 timer (1), connecting wires
\end_layout

\begin_layout Section*
Procedure
\end_layout

\begin_layout Enumerate
Connect the circuit as shown in the circuit diagram.
\end_layout

\begin_layout Enumerate
Connect the clock to all IC CD 4027's.
\end_layout

\begin_layout Enumerate
Observe the input and output signals and note the result.
\end_layout

\begin_layout Section*
Precautions
\end_layout

\begin_layout Enumerate
Power supply should not exceed 
\begin_inset Formula $+5$
\end_inset

V.
\end_layout

\begin_layout Enumerate
Connections should be tight.
\end_layout

\begin_layout Enumerate
Components should be individually tested, beforehand.
\end_layout

\begin_layout Chapter
Modulo - 9 Ripple Counter
\end_layout

\begin_layout Section*
Aim
\end_layout

\begin_layout Standard
design of a modulo-9 ripple counter using IC CD 4029 and IC CD 4091
\end_layout

\begin_layout Section*
Apparatus Needed
\end_layout

\begin_layout Standard
breadboard, DC power supply, cathode ray oscilloscope (CRO), IC CD 4029
 (1), IC CD 4091 (1), connecting wires
\end_layout

\begin_layout Section*
Procedure
\end_layout

\begin_layout Enumerate
Connect the circuit as shown in the circuit diagram.
\end_layout

\begin_layout Enumerate
Before switching on the power supply, make sure all connections are correct.
\end_layout

\begin_layout Enumerate
Observe 
\begin_inset Formula $Q_{1}$
\end_inset

, 
\begin_inset Formula $Q_{2}$
\end_inset

, 
\begin_inset Formula $Q_{3}$
\end_inset

 and 
\begin_inset Formula $Q_{4}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Complete the observation table.
\end_layout

\begin_layout Section*
Precautions
\end_layout

\begin_layout Enumerate
Power supply should not exceed 
\begin_inset Formula $+5$
\end_inset

V.
\end_layout

\begin_layout Enumerate
Connections should be tight.
\end_layout

\begin_layout Enumerate
Components should be individually tested, beforehand.
\end_layout

\begin_layout Chapter
Schmitt Trigger Circuit
\end_layout

\begin_layout Section*
Aim
\end_layout

\begin_layout Standard
design of a Schmitt trigger circuit (using IC 741 OPAMP) and to observe
 the output waveforms
\end_layout

\begin_layout Section*
Apparatus Needed
\end_layout

\begin_layout Standard
breadboard, DC power supply, function generator (1), cathode ray oscilloscope
 (CRO), IC 741 (1), resistors 
\begin_inset Formula $8.2k\Omega$
\end_inset

 (1), resistors 
\begin_inset Formula $100k\Omega$
\end_inset

 (1), connecting wires
\end_layout

\begin_layout Section*
Procedure
\end_layout

\begin_layout Enumerate
Connect the circuit as shown in the circuit diagram.
\end_layout

\begin_layout Enumerate
Before switching on power supply, make sure all connections are correct.
\end_layout

\begin_layout Enumerate
Select sinusoidal input from function generator.
\end_layout

\begin_layout Enumerate
Connect the CRO probe to terminal 
\begin_inset Formula $2$
\end_inset

, other terminal to ground.
\end_layout

\begin_layout Enumerate
Observe input waveform, plot the waveform observed at terminals 
\begin_inset Formula $2$
\end_inset

 and 
\begin_inset Formula $6$
\end_inset

.
\end_layout

\begin_layout Enumerate
Repeat steps 
\begin_inset Formula $3-5$
\end_inset

 for triangular input.
\end_layout

\begin_layout Enumerate
Calculate loop gain (
\begin_inset Formula $-A\beta$
\end_inset

) for both observations.
\end_layout

\begin_layout Section*
Precautions
\end_layout

\begin_layout Enumerate
Power supply should not exceed 
\begin_inset Formula $+5$
\end_inset

V.
\end_layout

\begin_layout Enumerate
Connections should be tight.
\end_layout

\begin_layout Enumerate
Components should be individually tested, beforehand.
\end_layout

\end_body
\end_document
